<?php

namespace Proxies\__CG__\HarasBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Text extends \HarasBundle\Entity\Text implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'HarasBundle\\Entity\\Text' . "\0" . 'id', '' . "\0" . 'HarasBundle\\Entity\\Text' . "\0" . 'name', '' . "\0" . 'HarasBundle\\Entity\\Text' . "\0" . 'textFr', '' . "\0" . 'HarasBundle\\Entity\\Text' . "\0" . 'textEn', '' . "\0" . 'HarasBundle\\Entity\\Text' . "\0" . 'articles_title', '' . "\0" . 'HarasBundle\\Entity\\Text' . "\0" . 'articles_content', '' . "\0" . 'HarasBundle\\Entity\\Text' . "\0" . 'medias', '' . "\0" . 'HarasBundle\\Entity\\Text' . "\0" . 'pages'];
        }

        return ['__isInitialized__', '' . "\0" . 'HarasBundle\\Entity\\Text' . "\0" . 'id', '' . "\0" . 'HarasBundle\\Entity\\Text' . "\0" . 'name', '' . "\0" . 'HarasBundle\\Entity\\Text' . "\0" . 'textFr', '' . "\0" . 'HarasBundle\\Entity\\Text' . "\0" . 'textEn', '' . "\0" . 'HarasBundle\\Entity\\Text' . "\0" . 'articles_title', '' . "\0" . 'HarasBundle\\Entity\\Text' . "\0" . 'articles_content', '' . "\0" . 'HarasBundle\\Entity\\Text' . "\0" . 'medias', '' . "\0" . 'HarasBundle\\Entity\\Text' . "\0" . 'pages'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Text $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getTranslation($language)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTranslation', [$language]);

        return parent::getTranslation($language);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setTextFr($textFr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTextFr', [$textFr]);

        return parent::setTextFr($textFr);
    }

    /**
     * {@inheritDoc}
     */
    public function getTextFr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTextFr', []);

        return parent::getTextFr();
    }

    /**
     * {@inheritDoc}
     */
    public function setTextEn($textEn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTextEn', [$textEn]);

        return parent::setTextEn($textEn);
    }

    /**
     * {@inheritDoc}
     */
    public function getTextEn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTextEn', []);

        return parent::getTextEn();
    }

    /**
     * {@inheritDoc}
     */
    public function addArticlesTitle(\HarasBundle\Entity\Article $articlesTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addArticlesTitle', [$articlesTitle]);

        return parent::addArticlesTitle($articlesTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function removeArticlesTitle(\HarasBundle\Entity\Article $articlesTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeArticlesTitle', [$articlesTitle]);

        return parent::removeArticlesTitle($articlesTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getArticlesTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArticlesTitle', []);

        return parent::getArticlesTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function addArticlesContent(\HarasBundle\Entity\Article $articlesContent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addArticlesContent', [$articlesContent]);

        return parent::addArticlesContent($articlesContent);
    }

    /**
     * {@inheritDoc}
     */
    public function removeArticlesContent(\HarasBundle\Entity\Article $articlesContent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeArticlesContent', [$articlesContent]);

        return parent::removeArticlesContent($articlesContent);
    }

    /**
     * {@inheritDoc}
     */
    public function getArticlesContent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArticlesContent', []);

        return parent::getArticlesContent();
    }

    /**
     * {@inheritDoc}
     */
    public function addMedia(\HarasBundle\Entity\Media $medias)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMedia', [$medias]);

        return parent::addMedia($medias);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMedia(\HarasBundle\Entity\Media $medias)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMedia', [$medias]);

        return parent::removeMedia($medias);
    }

    /**
     * {@inheritDoc}
     */
    public function getMedias()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMedias', []);

        return parent::getMedias();
    }

    /**
     * {@inheritDoc}
     */
    public function addPage(\HarasBundle\Entity\Page $page)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPage', [$page]);

        return parent::addPage($page);
    }

    /**
     * {@inheritDoc}
     */
    public function removePage(\HarasBundle\Entity\Page $page)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePage', [$page]);

        return parent::removePage($page);
    }

    /**
     * {@inheritDoc}
     */
    public function getPages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPages', []);

        return parent::getPages();
    }

}
